"""
Script para testar se o menu foi corrigido
"""
import requests
from bs4 import BeautifulSoup

def test_menu_fix():
    print("üîß Teste do Menu de Perfil - Corre√ß√£o Bootstrap")
    print("=" * 50)
    
    # Testar no Railway
    BASE_URL = 'https://samape-py-desenvolvimento.up.railway.app'
    
    try:
        # Fazer uma requisi√ß√£o para qualquer p√°gina que tenha o menu
        response = requests.get(f"{BASE_URL}/login", timeout=10)
        
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            
            print("‚úÖ P√°gina carregada com sucesso")
            print(f"   ‚Ä¢ URL: {BASE_URL}/login")
            print(f"   ‚Ä¢ Status: {response.status_code}")
            
            # Verificar se o menu tem os atributos corretos do Bootstrap
            dropdown_btn = soup.find('button', {'data-bs-toggle': 'dropdown'})
            dropdown_menu = soup.find('ul', class_='dropdown-menu')
            
            print("\nüîç Verificando estrutura do menu:")
            print(f"   ‚Ä¢ Bot√£o dropdown encontrado: {'‚úÖ' if dropdown_btn else '‚ùå'}")
            print(f"   ‚Ä¢ Menu dropdown encontrado: {'‚úÖ' if dropdown_menu else '‚ùå'}")
            
            if dropdown_btn:
                print(f"   ‚Ä¢ Atributo data-bs-toggle: {'‚úÖ' if dropdown_btn.get('data-bs-toggle') == 'dropdown' else '‚ùå'}")
                print(f"   ‚Ä¢ Classe dropdown-toggle: {'‚úÖ' if 'dropdown-toggle' in dropdown_btn.get('class', []) else '‚ùå'}")
            
            if dropdown_menu:
                print(f"   ‚Ä¢ Classe dropdown-menu: {'‚úÖ' if 'dropdown-menu' in dropdown_menu.get('class', []) else '‚ùå'}")
                print(f"   ‚Ä¢ Itens do menu: {len(dropdown_menu.find_all('a', class_='dropdown-item'))}")
            
            # Verificar se h√° links importantes
            profile_link = soup.find('a', href=lambda x: x and 'profile' in x if x else False)
            logout_link = soup.find('a', href=lambda x: x and 'logout' in x if x else False)
            
            print("\nüîó Links importantes:")
            print(f"   ‚Ä¢ Link 'Meu Perfil': {'‚úÖ' if profile_link else '‚ùå'}")
            print(f"   ‚Ä¢ Link 'Sair': {'‚úÖ' if logout_link else '‚ùå'}")
            
            return True
            
        else:
            print(f"‚ùå Erro ao carregar p√°gina: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        return False

if __name__ == "__main__":
    if test_menu_fix():
        print("\nüéâ TESTE CONCLU√çDO!")
        print("Se voc√™ est√° logado, o menu agora deve funcionar corretamente.")
        print("Clique no seu nome no canto superior direito para testar.")
    else:
        print("\n‚ùå TESTE FALHOU")
        print("Verifique se a aplica√ß√£o est√° funcionando.")
