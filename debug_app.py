"""
Script de debug para identificar problemas na aplica√ß√£o
"""
import os
import sys
import traceback

# Configurar a URL do banco de dados
os.environ['DATABASE_URL'] = 'postgresql://postgres:DygkiiZpPKBMhHItUfsBVFQfpqmQvwDz@mainline.proxy.rlwy.net:55166/railway'

print("üîç Debug do Sistema SAMAPE")
print("=" * 30)

print(f"üêç Python: {sys.version}")
print(f"üìÅ Diret√≥rio: {os.getcwd()}")

# Teste 1: Importa√ß√µes b√°sicas
print("\n1Ô∏è‚É£ Testando importa√ß√µes b√°sicas...")
try:
    from database import db
    print("‚úÖ database.py importado")
except Exception as e:
    print(f"‚ùå Erro em database.py: {e}")
    traceback.print_exc()

try:
    from models import User
    print("‚úÖ models.py importado")
except Exception as e:
    print(f"‚ùå Erro em models.py: {e}")
    traceback.print_exc()

# Teste 2: Aplica√ß√£o Flask
print("\n2Ô∏è‚É£ Testando aplica√ß√£o Flask...")
try:
    from app import app
    print("‚úÖ app.py importado")
    print(f"   App: {app}")
    print(f"   Configura√ß√£o: {app.config.get('SQLALCHEMY_DATABASE_URI', 'N/A')[:50]}...")
except Exception as e:
    print(f"‚ùå Erro em app.py: {e}")
    traceback.print_exc()

# Teste 3: Contexto da aplica√ß√£o
print("\n3Ô∏è‚É£ Testando contexto da aplica√ß√£o...")
try:
    with app.app_context():
        print("‚úÖ Contexto da aplica√ß√£o funcionando")
        user_count = User.query.count()
        print(f"‚úÖ Consulta ao banco funcionando - {user_count} usu√°rios")
except Exception as e:
    print(f"‚ùå Erro no contexto: {e}")
    traceback.print_exc()

# Teste 4: Usu√°rio admin
print("\n4Ô∏è‚É£ Testando usu√°rio admin...")
try:
    with app.app_context():
        admin = User.query.filter_by(username='admin').first()
        if admin:
            print(f"‚úÖ Admin encontrado: {admin.username}")
            print(f"   Email: {admin.email}")
            print(f"   Ativo: {admin.active}")
            
            # Testar senha
            if admin.check_password('admin123'):
                print("‚úÖ Senha correta")
            else:
                print("‚ùå Senha incorreta")
        else:
            print("‚ùå Admin n√£o encontrado")
except Exception as e:
    print(f"‚ùå Erro ao verificar admin: {e}")
    traceback.print_exc()

# Teste 5: Routes
print("\n5Ô∏è‚É£ Testando rotas...")
try:
    from routes import register_routes
    print("‚úÖ routes.py importado")
except Exception as e:
    print(f"‚ùå Erro em routes.py: {e}")
    traceback.print_exc()

print("\n" + "="*50)
print("üîç Debug conclu√≠do!")
